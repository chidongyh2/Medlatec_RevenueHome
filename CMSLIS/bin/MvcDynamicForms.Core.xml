<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MvcDynamicForms.Core</name>
    </assembly>
    <members>
        <member name="T:MvcDynamicForms.Core.DataItem">
            <summary>
            Stores arbitrary data.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.DataItem.Value">
            <summary>
            The stored object.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.DataItem.ClientSide">
            <summary>
            Whether to render the data.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Enums.FieldType">
            <summary>
            Possible types of Field objects. This enumeration can be used when constructing Field objects from external data.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Abstract.ListField">
            <summary>
            Represents an html input field that contains choices for the end user to choose from.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.ListField.CommaDelimitedChoices">
            <summary>
            Gets or sets choices represented as a comma delimited string. When setting, the current choices are first cleared.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.ListField.Choices">
            <summary>
            The choices that the end user can choose from.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.ListField.ResponseDelimiter">
            <summary>
            The text used to delimit multiple choices from the end user.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.ListField.AddChoices(System.String,System.String)">
            <summary>
            Provides a convenient way to add choices.
            </summary>
            <param name="choices">A delimited string of choices.</param>
            <param name="delimiter">The delimiter used to seperate the choices.</param>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.ListField.AddChoices(System.String)">
            <summary>
            Provides a convenient way to add choices.
            </summary>
            <param name="choices">A comma delimited string of choices.</param>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Abstract.Field">
            <summary>
            Represents a dynamically generated form field.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.Field.Template">
            <summary>
            The fields's HTML template.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.Field.Display">
            <summary>
            Whether the field should be rendered when Form.RenderHtml() is called.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.Field.Group">
            <summary>
            A friendly field group name. Use this to group fields together for your own purposes.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.Field.Key">
            <summary>
            Used to identify field.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.Field.DataDictionary">
            <summary>
            An arbitrary dictionary of objects. Use this to attach objects to your fields.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.Field.HasClientData">
            <summary>
            Whether the DataDictionary contains any data objects that will be rendered.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.Field.DisplayOrder">
            <summary>
            The relative position that the field is rendered to html.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.Field.RenderHtml">
            <summary>
            Renders the field as html.
            </summary>
            <returns>Returns a string containing the rendered html of the Field object.</returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.Field.GetDataValue``1(System.String)">
            <summary>
            Retrieves a strongly typed object from the DataDictionary;
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.Field.AddDataValue(System.String,System.Object)">
            <summary>
            Adds an object to the data dictionary. By default, the object will not be rendered.
            </summary>
            <param name="key">The dictionary key.</param>
            <param name="value">The object to store</param>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.Field.AddDataValue(System.String,System.Object,System.Boolean)">
            <summary>
            Adds an object to the data dictionary.
            </summary>
            <param name="key">The dictionary key.</param>
            <param name="value">The object to store.</param>
            <param name="clientSide">Whether the data will be rendered on the client.</param>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.Field.GetHtmlId">
            <summary>
            Gets a value that can be associated with an HTML input element's id or name attribute.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Abstract.OrientableField">
            <summary>
            Represents and input field that can be displayed either vertically or horizontally.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.OrientableField.Orientation">
            <summary>
            The direction that the choices will be displayed.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.OrientableField.InputLabelClass">
            <summary>
            The class attribute of the label element used to display the user's choice.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.OrientableField.VerticalClass">
            <summary>
            The class attribute that is added to the ul element when using vertical orientation.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.OrientableField.HorizontalClass">
            <summary>
            The class attribute that is added to the ul element when using horizontal orientation.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.OrientableField.ListClass">
            <summary>
            The class attribute that is added to the ul element containing the choices.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Abstract.InputField">
            <summary>
            Represents a dynamically generated html input field.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.ResponseTitle">
            <summary>
            Used to identify InputFields when working with end users' responses.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.Prompt">
            <summary>
            The question asked of the end user.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.PromptClass">
            <summary>
            The html class applied to the label element that is used to prompt the user.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.Response">
            <summary>
            String representing the user's response to the field.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.Required">
            <summary>
            Whether the field must be completed to be valid.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.RequiredMessage">
            <summary>
            The error message that the end user sees if they do not complete the field.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.Error">
            <summary>
            The error message that the end user sees.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.ErrorClass">
            <summary>
            The class attribute of the label element that is used to display an error message to the user.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.ErrorIsClear">
            <summary>
            True if the field is valid; false otherwise.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.InputField.InputHtmlAttributes">
            <summary>
            Collection of html attribute names and values that will be applied to the rendered input elements.
            For list fields, these will be applied to every ListItem.
            Use the ListItem.HtmlAttributes dictionary for rendering attributes for individual list items.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.InputField.Validate">
            <summary>
            Validates the user's response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Abstract.InputField.ClearError">
            <summary>
            Removes the message stored in the Error property.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Abstract.TextField">
            <summary>
            Represents an html input field that will accept a text response from the user.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.TextField.RegularExpression">
            <summary>
            A regular expression that will be applied to the user's text respone for validation.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Abstract.TextField.RegexMessage">
            <summary>
            The error message that is displayed to the user when their response does no match the regular expression.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.CheckBox">
            <summary>
            Represents a single html checkbox input field.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.CheckBox.CheckedValue">
            <summary>
            The text to be used as the user's response when they check the checkbox.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.CheckBox.UncheckedValue">
            <summary>
            The text to be used as the user's response when they do not check the checkbox.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.CheckBox.Checked">
            <summary>
            The state of the checkbox.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.CheckBoxList">
            <summary>
            Represents a list of html checkbox inputs.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.FileUpload.ValidExtensions">
            <summary>
            A comma delimited list of acceptable file extensions.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.FileUpload.UseMultiple">
            <summary>
            file input add multiple to enable multiple upload
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Hidden">
            <summary>
            Represents an html hidden input element.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Hidden.Value">
            <summary>
            The value of the hidden field.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Hidden.Response">
            <summary>
            The value of the hidden field. Returns the Value property.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Hidden.Validate">
            <summary>
            Validates the hidden field. This always returns true.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Fields.Hidden.RenderHtml">
            <summary>
            Render the hidden field as an html hidden input element.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Literal">
            <summary>
            Represents html to be rendered on the form.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Literal.Html">
            <summary>
            The html to be rendered on the form.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.RadioList">
            <summary>
            Represents a list of html radio button inputs.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.Select">
            <summary>
            Represents an html select element.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Select.Size">
            <summary>
            The number of options to display at a time.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Select.MultipleSelection">
            <summary>
            Determines whether the select element will accept multiple selections.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Select.EmptyOption">
            <summary>
            The text to be rendered as the first option in the select list when ShowEmptyOption is set to true.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Fields.Select.ShowEmptyOption">
            <summary>
            Determines whether a valueless option is rendered as the first option in the list.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.TextArea">
            <summary>
            Represents an html textarea element.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Fields.TextBox">
            <summary>
            Represents an html textbox input element.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.FieldList">
            <summary>
            A collection of Field objects.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Form">
            <summary>
            Represents an html input form that can be dynamically rendered at runtime.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Form.Fields">
            <summary>
            A collection of Field objects.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Form.FieldPrefix">
            <summary>
            Gets or sets the string that is used to prefix html input elements' id and name attributes.
            This value must comply with the naming rules for HTML id attributes and Input elements' name attributes.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Form.Serialize">
            <summary>
            Gets or sets the boolean value determining if the form should serialize itself into the string returned by the RenderHtml() method.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Form.InputFields">
            <summary>
            Returns an enumeration of Field objects that are of type InputField.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.RenderDataScript(System.String)">
            <summary>
            Renders a script block containing a JSON representation of each fields' client side data.
            </summary>
            <param name="jsVarName">Name of the js variable.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.Validate">
            <summary>
            Validates each displayed InputField object contained in the Fields collection. 
            Validation causes the Error property to be set for each InputField object.
            </summary>
            <returns>Returns true if every InputField object is valid. False is returned otherwise.</returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.Validate(System.Boolean)">
            <summary>
            Validates each displayed InputField object contained in the Fields collection. 
            Validation causes the Error property to be set for each InputField object.
            </summary>
            <param name="onlyDisplayed">Whether to validate only displayed fields.</param>
            <returns>Returns true if every InputField object is valid. False is returned otherwise.</returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.RenderHtml(System.Boolean)">
            <summary>
            Returns a string containing the rendered HTML of every contained Field object.
            Optionally, the form's serialized state and/or JavaScript data can be included in the returned HTML string.
            </summary>        
            <param name="formatHtml">Determines whether to format the generated html with indentation and whitespace for readability.</param>
            <returns>Returns a string containing the rendered html of every contained Field object.</returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.RenderHtml">
            <summary>
            Returns a string containing the rendered html of every contained Field object. The html can optionally include the Form object's state serialized into a hidden field.
            </summary>
            <returns>Returns a string containing the rendered html of every contained Field object.</returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.ClearAllErrors">
            <summary>
            This method clears the Error property of each contained InputField.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.AddFields(MvcDynamicForms.Core.Fields.Abstract.Field[])">
            <summary>
            This method provides a convenient way of adding multiple Field objects at once.
            </summary>
            <param name="fields">Field object(s)</param>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.GetResponses(System.Boolean)">
            <summary>
            Provides a convenient way the end users' responses to each InputField
            </summary>
            <param name="completedOnly">Determines whether to return a Response object for only InputFields that the end user completed.</param>
            <returns>List of Response objects.</returns>
        </member>
        <member name="M:MvcDynamicForms.Core.Form.SetFieldTemplates(System.String,MvcDynamicForms.Core.Fields.Abstract.Field[])">
            <summary>
            Provides a convenient way to set the template for multiple fields.
            </summary>
            <param name="template">The fields' HTML template.</param>
        </member>
        <member name="P:MvcDynamicForms.Core.ListItem.HtmlAttributes">
            <summary>
            Stores html attributes to be rendered with the list item.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.PlaceHolders">
            <summary>
            Static class containing place holder tokens to be used with form and field templates.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.Fields">
            <summary>
            Place holder for fields' rendered HTML.
            For use only with the Form.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.Input">
            <summary>
            Place holder for an InputField's input elements. 
            For use only with the InputField.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.Prompt">
            <summary>
            Place holder for an InputField's prompt label element. 
            For use only with the InputField.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.Error">
            <summary>
            Place holder for an InputField's error label element. 
            For use only with the InputField.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.Literal">
            <summary>
            Place holder for a Literal field's html. 
            For use only with the Literal.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.SerializedForm">
            <summary>
            Place holder for a Form's serialized state as a hidden html input element. 
            For use only with the Form.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.DataScript">
            <summary>
            Place holder for Form's Fields' client-side data represented as JSON in an HTML script element.
            For use only with the Form.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.PlaceHolders.FieldWrapperId">
            <summary>
            Place holder for a Field's wrapping element's ID attribute value.
            The wrapping element is given a unique ID for DOM manipulation purposes.
            For use only with the Field.Template property.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.RegexPatterns.HtmlId">
            <summary>
            Matches a well-formed HTML element's id attribute value. 
            Naming rules: Must begin with a letter A-Z or a-z.  
            Can be followed by: letters (A-Za-z), digits (0-9), hyphens ("-"), and underscores ("_").
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.RegexPatterns.HtmlInputName">
            <summary>
            Matches a well-formed HTML input element's name attribute value. 
            Naming rules: Must begin with a letter A-Z or a-z.  
            Can be followed by: letters (A-Za-z), digits (0-9), hyphens ("-"), and underscores ("_"), colons (":"), and periods (".").
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.RegexPatterns.EmailAddress">
            <summary>
            A practical regular expression used to validate email addresses.
            This will match the vast majority of email addresses in use.
            This is not RFC 2822 compliant.
            See http://www.regular-expressions.info/email.html for more information.
            </summary>
        </member>
        <member name="T:MvcDynamicForms.Core.Response">
            <summary>
            Class that represents the end user's response to an InputField object.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Response.Title">
            <summary>
            The response title of the InputField object.
            </summary>
        </member>
        <member name="P:MvcDynamicForms.Core.Response.Value">
            <summary>
            The user's response.
            </summary>
        </member>
        <member name="M:MvcDynamicForms.Core.SerializationUtility.ToJson(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,MvcDynamicForms.Core.DataItem}})">
            <summary>
            Creates a JSON graph of all of the field's client-side data.
            </summary>
        </member>
    </members>
</doc>
